server {
    server_name www.example.com example.com;
	listen 443 ssl http2;
	root /home/web/example.com/public;
	access_log off;
	error_log off;
	client_max_body_size 75M;

	# HSTS
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

  	# Let's Encrypt
	location ~ ^/.well-known {
    	allow all;
    }
		
    # SSL
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbot
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
	ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    resolver 8.8.8.8 8.8.4.4;

    # Index
    location / {
    	index index.html;

		# 403 and 404 handling
    	error_page 403 404 =404 /404/;
    }

	# Admin CP
	location /admin {
    	proxy_pass_header Server;
    	proxy_set_header Host $http_host;
    	proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Scheme $scheme;
    	proxy_pass http://127.0.0.1:4000/admin;
    }

}	

server {
    if ($host = example.com) {
    	return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = www.example.com) {
    	return 301 https://example.com$request_uri;
	}

    server_name www.example.com example.com;
    listen 80;
    return 404; # managed by Certbot
}